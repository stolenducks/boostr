#!/bin/bash
# Terminal greeting with ASCII art

# Colors
CYAN='\033[0;36m'
GREEN='\033[0;32m'
GRAY='\033[0;90m'
RED='\033[0;31m'
YELLOW='\033[0;33m'
RESET='\033[0m'

# Load user's configured status styles from ~/.boostr-config
[ -f ~/.boostr-config ] && source ~/.boostr-config

# Get final icon for each status type based on user's configured style
get_final_icon() {
    local type=$1
    local style=$2
    case "$type" in
        success)
            case "$style" in
                build)  echo "[✓]" ;;
                binary) echo "[OK]" ;;
                box)    echo "[■]" ;;
                spark)  echo "[★]" ;;
                wave)   echo "[≡]" ;;
                *)      echo "[✓]" ;;
            esac
            ;;
        error)
            case "$style" in
                build)  echo "[×]" ;;
                binary) echo "[XX]" ;;
                cross)  echo "[✖]" ;;
                alert)  echo "[■]" ;;
                glitch) echo "[☠]" ;;
                *)      echo "[×]" ;;
            esac
            ;;
        info)
            case "$style" in
                build)  echo "[>]" ;;
                binary) echo "[►]" ;;
                arrow)  echo "[⇨]" ;;
                pulse)  echo "[◉]" ;;
                scan)   echo "[►]" ;;
                *)      echo "[>]" ;;
            esac
            ;;
        warning)
            case "$style" in
                build)   echo "[!]" ;;
                binary)  echo "[‼]" ;;
                alert)   echo "[▲]" ;;
                flash)   echo "[⚠]" ;;
                caution) echo "[X]" ;;
                *)       echo "[!]" ;;
            esac
            ;;
    esac
}

# Get user's configured icons (or defaults)
SUCCESS_ICON=$(get_final_icon "success" "${SUCCESS_STYLE:-build}")
ERROR_ICON=$(get_final_icon "error" "${ERROR_STYLE:-build}")
INFO_ICON=$(get_final_icon "info" "${INFO_STYLE:-build}")
WARNING_ICON=$(get_final_icon "warning" "${WARNING_STYLE:-build}")

# ASCII art - boostr with color gradient
cat << "EOF"

EOF

echo -e "${GRAY}    ██████${RESET}   ██████   ██████  ${GRAY}███████${RESET} ${GRAY}████████${RESET} ${GRAY}██████${RESET}  "
echo -e "${GRAY}    ██   ██${RESET} ██ ${RED}█${RESET}  ██ ██ ${RED}█${RESET}  ██ ${GRAY}██${RESET}         ${GRAY}██${RESET}    ${GRAY}██   ██${RESET} "
echo -e "${GRAY}    ██████${RESET}  ██    ██ ██    ██ ${GRAY}███████${RESET}    ${GRAY}██${RESET}    ${GRAY}██████${RESET}  "
echo -e "${GRAY}    ██   ██${RESET} ██    ██ ██    ██      ${GRAY}██${RESET}    ${GRAY}██${RESET}    ${GRAY}██   ██${RESET} "
echo -e "${GRAY}    ██████${RESET}   ██████   ██████  ${GRAY}███████${RESET}    ${GRAY}██${RESET}    ${GRAY}██   ██${RESET} "
echo ""

echo ""
echo -e "  ${GRAY}v1.0.0${RESET} | $(date '+%b %d, %I:%M %p')${RESET}"
echo ""
echo -e "  ${CYAN}Quick Start:${RESET}"
echo -e "    ${GREEN}ai${RESET}  \"question\"  - Conversational AI with context"
echo -e "    ${GREEN}doo${RESET} \"task\"      - AI command generator + executor"
echo ""
echo -e "  ${CYAN}Status Symbols:${RESET}"
echo -e "    ${GREEN}${SUCCESS_ICON}${RESET} Success  ${RED}${ERROR_ICON}${RESET} Error  ${CYAN}${INFO_ICON}${RESET} Info  ${YELLOW}${WARNING_ICON}${RESET} Warning"
echo ""
echo -e "  ${GRAY}Type 'ai clear' to reset conversation • 'boostr' to show this${RESET}"
echo ""
